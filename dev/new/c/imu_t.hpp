//// Do not edit, this is autogenerated ////
//

#pragma once

#include <stdint.h>
#include <string>
#include "vec_t.hpp"


namespace imu {

constexpr uint8_t IMU_T_MSG_SIZE = 176;
constexpr uint8_t IMU_T_MSG_ID = 10;


struct __attribute__((packed)) imu_t {

  enum STATE: uint8_t {
    A=1;
    B=2;
    C=3;
  };

  enum PLACE: uint8_t {
    A=1;
    B=2;
    C=3;
  };


  vec_t[3] accel = {0, 0, 0};
  vec_t[3] gyro = {0, 0, 0};
  float x = 0;
  uint32 time = 0;
};


 
void place(uint8_t& a, int& b) {
    a = 5;
    b = 6; // something here
}




} // end namespace imu
