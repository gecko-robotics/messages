# Do not edit, this is autogenerated
#
{%- if license %}
{{ license }}
{%- endif -%}
###############################################################################
from dataclasses import dataclass
from .base import Base
{%- if enums %}
from enum import IntEnum, unique
{%- endif -%}
{%- if includes -%}
{%- for inc in includes %}
{{ inc }}
{%- endfor -%}
{%- endif -%}

{#- ENUMS ------------------------------ #}
{%- if enums %}
{%- for k, v in enums.items() %}
@unique
class {{ k|upper }}(IntEnum):
    {%- for name, value in v.items() %}
    {{ name }} = {{ value }}
    {%- endfor %}
{% endfor %}
{% endif %}

{#- DATACLASS ---------------------------- #}
{%- if frozen %}
@dataclass(frozen=True)
{% else %}
@dataclass
{%- endif %}
class {{ name }}(Base):
    {%- for var in vars %}
    {{ var }}
    {%- endfor %}

    def __yivo__(self):
        # (fmt, size, id)
        return ("{{ format }}", {{ msg_size }}, {{ msg_id }})

{# FUNCTIONS ------------------------------- #}
{%- if functions %}
{{ functions }}
{% endif %}