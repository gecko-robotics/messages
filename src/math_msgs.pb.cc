// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: math_msgs.proto
// Protobuf C++ Version: 5.29.3

#include "math_msgs.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kevin {

inline constexpr Covariance6::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : xx_{0},
        yy_{0},
        zz_{0},
        xy_{0},
        xz_{0},
        yz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Covariance6::Covariance6(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Covariance6DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Covariance6DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Covariance6DefaultTypeInternal() {}
  union {
    Covariance6 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Covariance6DefaultTypeInternal _Covariance6_default_instance_;

inline constexpr Covariance3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : xx_{0},
        yy_{0},
        zz_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Covariance3::Covariance3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Covariance3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Covariance3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Covariance3DefaultTypeInternal() {}
  union {
    Covariance3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Covariance3DefaultTypeInternal _Covariance3_default_instance_;
}  // namespace kevin
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_math_5fmsgs_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_math_5fmsgs_2eproto = nullptr;
const ::uint32_t
    TableStruct_math_5fmsgs_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance3, _impl_.xx_),
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance3, _impl_.yy_),
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance3, _impl_.zz_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance6, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance6, _impl_.xx_),
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance6, _impl_.yy_),
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance6, _impl_.zz_),
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance6, _impl_.xy_),
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance6, _impl_.xz_),
        PROTOBUF_FIELD_OFFSET(::kevin::Covariance6, _impl_.yz_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::kevin::Covariance3)},
        {11, -1, -1, sizeof(::kevin::Covariance6)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kevin::_Covariance3_default_instance_._instance,
    &::kevin::_Covariance6_default_instance_._instance,
};
const char descriptor_table_protodef_math_5fmsgs_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017math_msgs.proto\022\005kevin\"1\n\013Covariance3\022"
    "\n\n\002xx\030\001 \001(\001\022\n\n\002yy\030\002 \001(\001\022\n\n\002zz\030\003 \001(\001\"U\n\013C"
    "ovariance6\022\n\n\002xx\030\001 \001(\001\022\n\n\002yy\030\002 \001(\001\022\n\n\002zz"
    "\030\003 \001(\001\022\n\n\002xy\030\004 \001(\001\022\n\n\002xz\030\005 \001(\001\022\n\n\002yz\030\006 \001"
    "(\001b\006proto3"
};
static ::absl::once_flag descriptor_table_math_5fmsgs_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_math_5fmsgs_2eproto = {
    false,
    false,
    170,
    descriptor_table_protodef_math_5fmsgs_2eproto,
    "math_msgs.proto",
    &descriptor_table_math_5fmsgs_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_math_5fmsgs_2eproto::offsets,
    file_level_enum_descriptors_math_5fmsgs_2eproto,
    file_level_service_descriptors_math_5fmsgs_2eproto,
};
namespace kevin {
// ===================================================================

class Covariance3::_Internal {
 public:
};

Covariance3::Covariance3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kevin.Covariance3)
}
Covariance3::Covariance3(
    ::google::protobuf::Arena* arena, const Covariance3& from)
    : Covariance3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Covariance3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Covariance3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xx_),
           0,
           offsetof(Impl_, zz_) -
               offsetof(Impl_, xx_) +
               sizeof(Impl_::zz_));
}
Covariance3::~Covariance3() {
  // @@protoc_insertion_point(destructor:kevin.Covariance3)
  SharedDtor(*this);
}
inline void Covariance3::SharedDtor(MessageLite& self) {
  Covariance3& this_ = static_cast<Covariance3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Covariance3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Covariance3(arena);
}
constexpr auto Covariance3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Covariance3),
                                            alignof(Covariance3));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Covariance3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Covariance3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Covariance3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Covariance3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Covariance3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Covariance3>(), &Covariance3::ByteSizeLong,
            &Covariance3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Covariance3, _impl_._cached_size_),
        false,
    },
    &Covariance3::kDescriptorMethods,
    &descriptor_table_math_5fmsgs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Covariance3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Covariance3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kevin::Covariance3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double xx = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance3, _impl_.xx_)}},
    // double yy = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance3, _impl_.yy_)}},
    // double zz = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance3, _impl_.zz_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double xx = 1;
    {PROTOBUF_FIELD_OFFSET(Covariance3, _impl_.xx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double yy = 2;
    {PROTOBUF_FIELD_OFFSET(Covariance3, _impl_.yy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double zz = 3;
    {PROTOBUF_FIELD_OFFSET(Covariance3, _impl_.zz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Covariance3::Clear() {
// @@protoc_insertion_point(message_clear_start:kevin.Covariance3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.xx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.zz_) -
      reinterpret_cast<char*>(&_impl_.xx_)) + sizeof(_impl_.zz_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Covariance3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Covariance3& this_ = static_cast<const Covariance3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Covariance3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Covariance3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kevin.Covariance3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double xx = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_xx()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_xx(), target);
          }

          // double yy = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_yy()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_yy(), target);
          }

          // double zz = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_zz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_zz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kevin.Covariance3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Covariance3::ByteSizeLong(const MessageLite& base) {
          const Covariance3& this_ = static_cast<const Covariance3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Covariance3::ByteSizeLong() const {
          const Covariance3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kevin.Covariance3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double xx = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_xx()) != 0) {
              total_size += 9;
            }
            // double yy = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_yy()) != 0) {
              total_size += 9;
            }
            // double zz = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_zz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Covariance3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Covariance3*>(&to_msg);
  auto& from = static_cast<const Covariance3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kevin.Covariance3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_xx()) != 0) {
    _this->_impl_.xx_ = from._impl_.xx_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_yy()) != 0) {
    _this->_impl_.yy_ = from._impl_.yy_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_zz()) != 0) {
    _this->_impl_.zz_ = from._impl_.zz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Covariance3::CopyFrom(const Covariance3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kevin.Covariance3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Covariance3::InternalSwap(Covariance3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Covariance3, _impl_.zz_)
      + sizeof(Covariance3::_impl_.zz_)
      - PROTOBUF_FIELD_OFFSET(Covariance3, _impl_.xx_)>(
          reinterpret_cast<char*>(&_impl_.xx_),
          reinterpret_cast<char*>(&other->_impl_.xx_));
}

::google::protobuf::Metadata Covariance3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Covariance6::_Internal {
 public:
};

Covariance6::Covariance6(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kevin.Covariance6)
}
Covariance6::Covariance6(
    ::google::protobuf::Arena* arena, const Covariance6& from)
    : Covariance6(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Covariance6::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Covariance6::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xx_),
           0,
           offsetof(Impl_, yz_) -
               offsetof(Impl_, xx_) +
               sizeof(Impl_::yz_));
}
Covariance6::~Covariance6() {
  // @@protoc_insertion_point(destructor:kevin.Covariance6)
  SharedDtor(*this);
}
inline void Covariance6::SharedDtor(MessageLite& self) {
  Covariance6& this_ = static_cast<Covariance6&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Covariance6::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Covariance6(arena);
}
constexpr auto Covariance6::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Covariance6),
                                            alignof(Covariance6));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Covariance6::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Covariance6_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Covariance6::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Covariance6>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Covariance6::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Covariance6>(), &Covariance6::ByteSizeLong,
            &Covariance6::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Covariance6, _impl_._cached_size_),
        false,
    },
    &Covariance6::kDescriptorMethods,
    &descriptor_table_math_5fmsgs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Covariance6::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> Covariance6::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kevin::Covariance6>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double xx = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.xx_)}},
    // double yy = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.yy_)}},
    // double zz = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.zz_)}},
    // double xy = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.xy_)}},
    // double xz = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.xz_)}},
    // double yz = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.yz_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double xx = 1;
    {PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.xx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double yy = 2;
    {PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.yy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double zz = 3;
    {PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.zz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double xy = 4;
    {PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.xy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double xz = 5;
    {PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.xz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double yz = 6;
    {PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.yz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Covariance6::Clear() {
// @@protoc_insertion_point(message_clear_start:kevin.Covariance6)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.xx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.yz_) -
      reinterpret_cast<char*>(&_impl_.xx_)) + sizeof(_impl_.yz_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Covariance6::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Covariance6& this_ = static_cast<const Covariance6&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Covariance6::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Covariance6& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kevin.Covariance6)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double xx = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_xx()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_xx(), target);
          }

          // double yy = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_yy()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_yy(), target);
          }

          // double zz = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_zz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_zz(), target);
          }

          // double xy = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_xy()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_xy(), target);
          }

          // double xz = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_xz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_xz(), target);
          }

          // double yz = 6;
          if (::absl::bit_cast<::uint64_t>(this_._internal_yz()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_yz(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kevin.Covariance6)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Covariance6::ByteSizeLong(const MessageLite& base) {
          const Covariance6& this_ = static_cast<const Covariance6&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Covariance6::ByteSizeLong() const {
          const Covariance6& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kevin.Covariance6)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double xx = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_xx()) != 0) {
              total_size += 9;
            }
            // double yy = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_yy()) != 0) {
              total_size += 9;
            }
            // double zz = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_zz()) != 0) {
              total_size += 9;
            }
            // double xy = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_xy()) != 0) {
              total_size += 9;
            }
            // double xz = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_xz()) != 0) {
              total_size += 9;
            }
            // double yz = 6;
            if (::absl::bit_cast<::uint64_t>(this_._internal_yz()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Covariance6::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Covariance6*>(&to_msg);
  auto& from = static_cast<const Covariance6&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kevin.Covariance6)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_xx()) != 0) {
    _this->_impl_.xx_ = from._impl_.xx_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_yy()) != 0) {
    _this->_impl_.yy_ = from._impl_.yy_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_zz()) != 0) {
    _this->_impl_.zz_ = from._impl_.zz_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_xy()) != 0) {
    _this->_impl_.xy_ = from._impl_.xy_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_xz()) != 0) {
    _this->_impl_.xz_ = from._impl_.xz_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_yz()) != 0) {
    _this->_impl_.yz_ = from._impl_.yz_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Covariance6::CopyFrom(const Covariance6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kevin.Covariance6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Covariance6::InternalSwap(Covariance6* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.yz_)
      + sizeof(Covariance6::_impl_.yz_)
      - PROTOBUF_FIELD_OFFSET(Covariance6, _impl_.xx_)>(
          reinterpret_cast<char*>(&_impl_.xx_),
          reinterpret_cast<char*>(&other->_impl_.xx_));
}

::google::protobuf::Metadata Covariance6::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace kevin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_math_5fmsgs_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
